# Contributor: Anton Kudelin <kudelin at protonmail dot com>
# Contributor:  saxonbeta <saxonbeta [[at]] gmail _dot com
# Contributor: Randy Heydon <randy dot heydon at clockworklab dot net>

pkgname=elmerfem
pkgver=9.0
pkgrel=7
pkgdesc="A finite element software for multiphysical problems"
arch=('x86_64')
url="http://www.elmerfem.org"
license=('GPL')
#removed dependencies 'hypre'
depends=('arpack' 'qt5-script' 'netcdf-fortran-openmpi' 'mmg' 'qwt' 'oce' 'blas' 'mumps-par' 'paraview-opt')
optdepends=('metis: Split grids to perform parallel runs')
makedepends=('gcc-fortran' 'cmake')
conflicts=('elmerfem-git')
options=(!emptydirs)
source=("https://github.com/ElmerCSC/$pkgname/archive/release-$pkgver.tar.gz"
        "$pkgname.desktop"
        "ElmerIce.patch"
        "progateIndex.patch"
        "variableTSteps.patch"
        "DCRComplexSolve.patch")
sha512sums=('0affb0420b674ebf4d089c4039ba78dd29650f0daf956eab59bd7bea1c466ba6dfdf17c1ca6c953f36bbf95ed127dc9e6e025ee3edb1d2a56e55e61e24e97254'
            '79162b8ebd9fc987eb734565ab3d58aaf6e5882bb09d67d7f2b9c6bfae24dec519f318fd3cc5813e56c0cdcc82aec892a88dc01041430597f4f46694d213c855'
            '301e00ab55802b023d8d0a5945576faabfd916e0f396def043c85f0971cdf3aa16c50f6be4f0a8951da2af93f233376b65499a8cc91baef5ae4d87cbe382f26d'
            '956d352b55be2413500740a2d3e8c3d53540762805d43708f0bc57cc8535fcc87a890a815272a968f221d27d1e105759e441429646260f746d23f1cfe32462fe'
            'd7df9f5d9bc172bb90731d78ab935724008d11db0a61f832ba020eb1a55f2306d09415a6110933f1ff710e15e82faf7067f222ae54f1dbbd80247bfd82895083'
            'c1a9dae8bfc63bf2c448029b7475d6d36c1aaedc09ff534e7152bc8c944c73b02e796740bfe83fdac9006087ec8a3b156f4382fd0a697e3267859d6de2ab8d6d')

prepare() {
  cd "$srcdir/$pkgname-release-$pkgver"
  [ -d "../build" ] && rm ../build -R
  mkdir ../build
  patch -p0 < "$srcdir/ElmerIce.patch"
  patch -p1 < "$srcdir/progateIndex.patch"
  patch -p1 < "$srcdir/variableTSteps.patch"
  patch -p1 < "$srcdir/DCRComplexSolve.patch"
  sed -i '/#include <QPainter>/a #include <QPainterPath>' ElmerGUI/Application/twod/renderarea.cpp
  sed -i 's/sprintf(str_pstr, fmt);/sprintf(str_pstr, "%s", fmt);/g' matc/src/str.c
  
}

build() {
  cd "$srcdir/build"
  cmake ../$pkgname-release-$pkgver \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_Fortran_FLAGS="$FCFLAGS -fallow-argument-mismatch -fallow-invalid-boz" \
    -DMPI_Fortran_COMPILE_FLAGS="$FCFLAGS -fallow-argument-mismatch -fallow-invalid-boz" \
    -DELMER_INSTALL_LIB_DIR=/usr/lib \
    -DWITH_ELMERGUI=ON \
    -DWITH_ElmerIce=OFF \
    -DWITH_LUA=ON \
    -DWITH_MATC=ON \
    -DWITH_MPI=ON \
    -DWITH_OpenMP=ON \
    -DWITH_QT5=ON \
    -DOpenGL_GL_PREFERENCE=GLVND \
    -DWITH_Hypre=OFF \
    -DWITH_QWT=ON \
    -DWITH_OCC=ON \
    -DWITH_Mumps=ON \
    -DWITH_VTK=ON \
    -DWITH_PARAVIEW=ON
# -DHYPRE_INCLUDE_DIR=/usr/include/hypre \
  make all
    
}

package() {
  cd "$srcdir/build"
  make DESTDIR="$pkgdir" install
  cd "$pkgdir/usr"
  
  # Remove unecessary libraries
  rm -rf -- lib/{*.a,*arpack.so,ElmerGUI}

  #Create directories
  install -dv share/{applications,pixmaps,licenses/$pkgname}
  
  #Uncomment to install sources, if debugging is needed. Also, add the options !strip debug.
  #install -dv src/debug/$pkgname-release-$pkgver
  #cp -r "$srcdir"/$pkgname-release-$pkgver/* src/debug/$pkgname-release-$pkgver/

  #Icon and desktop files
  install -D -m644 "$srcdir/$pkgname-release-$pkgver/ElmerGUI/Application/images/logo.png" \
    share/pixmaps/$pkgname.png
  install -D -m644 "$srcdir/$pkgname.desktop" share/applications

  #Install additional edf files (GUI solvers)
  cp share/ElmerGUI/edf-extra/* share/ElmerGUI/edf
  
  #Clean up and move stuff in place
  mv share/ElmerGUI/license_texts/GPL_EXCEPTION share/licenses/$pkgname
  rm share/ElmerGUI/license_texts/*
}
